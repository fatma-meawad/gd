openapi: 3.0.0
info:
  title: Business and Seller API
  version: 1.0.0
  description: API for managing businesses and sellers

servers:
  - url: "/api/s4"
    description: local and codespaces

paths:
  /businesses/:
    post:
      summary: Create a new business (author:@rbekkum) (tester:@Jany-M)
      description: Allows admins to create a business account with detailed information about the business and the main owner.
      tags: [accounts]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "The Western Group"
                image:
                  type: string
                  example: "https://example.com/image.jpg"
                phone:
                  type: string
                  example: "867-5309"
                address:
                  type: string
                  example: "101 Elm Street"
                web_address:
                  type: string
                  example: "http://nightmareonelmstreet.com"
                description:
                  type: string
                  example: "Yeahhh Baby"
                main_owner_name:
                  type: string
                  example: "Austin Powers"
                main_owner_email:
                  type: string
                  example: "apowers@mojo.com"
                main_owner_phone:
                  type: string
                  example: "555-108-5555"
              required:
                [
                  title,
                  image,
                  phone,
                  address,
                  web_address,
                  main_owner_name,
                  main_owner_email,
                  main_owner_phone,
                ]
      responses:
        "201":  # Explicitly using 201 for successful creation
          description: Business created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_id:
                    type: string
                    example: "12345"
        "400":
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
              examples:
                example-400:
                  summary: Invalid input data
                  value:
                    status: "error"
                    errors: ["Invalid email format for main_owner_email", "Phone number format is invalid"]
                    locations: ["businesses.controller.js", "businesses.services.js"]
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
    get:
      summary: Get list of businesses (author:@Jany-M) (tester:@rbekkum) (reviewer:@alberto)
      description: As an admin, I want to view all existing businesses, so that I can easily see their data and manage them effectively.
      tags: [accounts]
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of items per page
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Offset for pagination
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  businesses:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: integer }
                        title: { type: string }
                        image: { type: string }
                        phone: { type: string }
                        address: { type: string }
                        web_address: { type: string }
                        description: { type: string }
                        main_owner_name: { type: string }
                        main_owner_email: { type: string, format: email }
                        main_owner_phone: { type: string }
                        created_at: { type: integer }
                        updated_at: { type: integer }
                        is_active: { type: boolean }
                        deactivated_at: { type: integer }
                  pagination_info:
                    type: object
                    properties:
                      limit: { type: integer }
                      offset: { type: integer }
                      total_items: { type: integer }
              examples:
                businesses-list:
                  summary: A list of businesses
                  value:
                    businesses:
                      - id: 1
                        title: "Example Business"
                        image: "http://example.com/image.png"
                        phone: "+1234567890"
                        address: "123 Example Street"
                        web_address: "http://example.com"
                        description: "An example business description"
                        main_owner_name: "John Doe"
                        main_owner_email: "john.doe@example.com"
                        main_owner_phone: "+1234567890"
                        created_at: 12345678
                        updated_at: 12345678
                        is_active: true
                        deactivated_at: 12345678
                    pagination_info:
                      limit: 1
                      offset: 0
                      total_items: 1
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
              examples:
                example-400:
                  summary: Invalid request parameters
                  value:
                    error: "Invalid request parameters"
                    details:
                      - "Limit must be a positive integer"
                      - "Offset must be a non-negative integer"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
              examples:
                example-401:
                  summary: Unauthorized access
                  value:
                    error: "Unauthorized"
        "403":
          description: Permission denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
              examples:
                example-403:
                  summary: Permission denied
                  value:
                    error: "Permission denied"
        "404":
          description: No businesses found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
              examples:
                example-404:
                  summary: No businesses found
                  value:
                    error: "No businesses found"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
              examples:
                example-500:
                  summary: Internal server error
                  value:
                    messages:
                      - "getBusinesses controller not implemented yet"
                      - "getBusinesses services not implemented yet"
                      - "getBusinesses database not implemented yet"
                    locations:
                      - "businesses.controller.js"
                      - "businesses.services.js"
                      - "businesses.database.js"

  /business/{id}:
    put:
      summary: Update a business (author:@rbekkum)
      description: Related story S4-3 - Allows admins to deactivate a business account and prevent further activity.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string }
                image: { type: string }
                phone: { type: string }
                address: { type: string }
                web_address: { type: string }
                description: { type: string }
                main_owner_name: { type: string }
                main_owner_email: { type: string, format: email }
                main_owner_phone: { type: string }
              required:
                [
                  title,
                  image,
                  phone,
                  address,
                  web_address,
                  main_owner_name,
                  main_owner_email,
                  main_owner_phone,
                ]
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  updated_id: { type: string }
        "400":
          description: Invalid data
        "500":
          description: Internal Server Error

  /business/{business_id}/location_id:
    get:
      summary: Get business location details
      parameters:
        - name: business_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  show_map: { type: string }
        "500":
          description: Internal Server Error

  /business/{business_id}/sellers/:
    post:
      summary: Add a seller to a business (author:@rbekkum) (tester:@Jany-M)
      description: Related story S4-2 - Allows admins to add or remove sellers associated with a specific business account.
      parameters:
        - name: business_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                profile_photo: { type: string }
                address: { type: string }
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_seller_id: { type: string }
        "400":
          description: Invalid Data
        "500":
          description: Internal Server Error

  /business/{business_id}/{seller_id}/sellers:
    post:
      summary: Create an account for a seller with QR code (tester:@Jany-M) (tester:@rbekkum)
      parameters:
        - name: business_id
          in: path
          required: true
          schema:
            type: string
        - name: seller_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Account created with QR code
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_seller_id: { type: string }
        "400":
          description: Invalid Data
        "500":
          description: Internal Server Error

  /sellers:
    get:
      summary: Get list of sellers (author:@Jany-M) (tester:@alberto)
      description: As an admin, I want to view all existing sellers, so that I can easily see their data and which business they are associated with, and manage them effectively.
      parameters:
        - name: businessId
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: searchSellerName
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  sellers_list:
                    type: array
                    items:
                      type: object
        "400":
          description: No results found
        "401":
          description: Unauthorized
        "403":
          description: Permission denied
        "404":
          description: Business ID does not exist
        "500":
          description: Internal Server Error

  /sellers/{seller_id}/access-history:
    get:
      summary: Get access history of a seller
      parameters:
        - name: seller_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: No access history found for this seller
        "500":
          description: Internal Server Error

  /business/{business_id}/sellers/export:
    get:
      summary: Export sellers for a business
      parameters:
        - name: business_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: No sellers found for this business
        "500":
          description: Internal Server Error

  /business/{business_id}/sellers/import:
    post:
      summary: Import sellers for a business (tester:@rbekkum)
      parameters:
        - name: business_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Success
        "400":
          description: CSV file not in correct format
        "401":
          description: Invalid entries in the CSV file
        "402":
          description: Partial import stopped at a row
        "403":
          description: Account not in database, create it before import
        "500":
          description: Internal Server Error

  /sellers/inactive-notifications:
    post:
      summary: Send notifications to inactive sellers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inactivity_period: { type: integer }
      responses:
        "200":
          description: Notifications sent to inactive sellers
        "400":
          description: Invalid inactivity period
        "500":
          description: Failed to send notifications

components:
  schemas:
    ErrorObject:
      type: object
      properties:
        status:
          type: string
          description: "error"
        errors:
          type: array
          items:
            type: string
          description: "Error messages"
          example: ["invalid", "not available"]
        locations:
          type: array
          items:
            type: string
          description: "Optional: Additional information about the location of each message"
          example: ["db.js", "service.js"]

