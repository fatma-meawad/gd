openapi: 3.0.0
info:
  title: Business and Seller API
  version: 1.0.0
  description: API for managing businesses and sellers

servers:
  - url: "/api/s4"
    description: local and codespaces

paths:
  /sellers/{seller_id}/qrcode:
    get:
      summary: Retrieve QR code for a specific seller (author:@claire-graham)
      description: Returns the QR code URL for a seller, identified by their unique seller ID
      parameters:
      - name: seller_id
        in: path
        required: true
        schema:
          type: string
        description: The unique ID of the seller.
      responses:
       '200':
        description: QR code retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                qrCodeUrl:
                  type: string
                  description: URL of the seller's QR code.
                  example: "https://example.com/qrcodes/6123abc4567def89012gh345.png"
       '400':
         description: Invalid seller ID
       '404':
         description: Seller not found
       '500':
        description: Internal Server Error   
  /businesses/:
    post:
      summary: Create a new business (tester:@Jany-M)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string }
                image: { type: string }
                phone: { type: string }
                address: { type: string }
                web_address: { type: string }
                description: { type: string }
                main_owner_name: { type: string }
                main_owner_email: { type: string, format: email }
                main_owner_phone: { type: string }
              required:
                [
                  title,
                  image,
                  phone,
                  address,
                  web_address,
                  main_owner_name,
                  main_owner_email,
                  main_owner_phone,
                ]
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_id: { type: string }
        "400":
          description: Invalid data
        "500":
          description: Internal Server Error
    get:
      summary: Get list of businesses (author:@Jany-M)
      description: As an admin, I want to view all existing businesses, so that I can easily see their data and manage them effectively.
      tags: [accounts]
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of items per page
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Offset for pagination
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  businesses:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: integer }
                        title: { type: string }
                        image: { type: string }
                        phone: { type: string }
                        address: { type: string }
                        web_address: { type: string }
                        description: { type: string }
                        main_owner_name: { type: string }
                        main_owner_email: { type: string, format: email }
                        main_owner_phone: { type: string }
                        created_at: { type: integer }
                        updated_at: { type: integer }
                        is_active: { type: boolean }
                        deactivated_at: { type: integer }
                  pagination_info:
                    type: object
                    properties:
                      limit: { type: integer }
                      offset: { type: integer }
                      total_items: { type: integer }
              examples:
                businesses-list:
                  summary: A list of businesses
                  value:
                    businesses:
                      - id: 1
                        title: "Example Business"
                        image: "http://example.com/image.png"
                        phone: "+1234567890"
                        address: "123 Example Street"
                        web_address: "http://example.com"
                        description: "An example business description"
                        main_owner_name: "John Doe"
                        main_owner_email: "john.doe@example.com"
                        main_owner_phone: "+1234567890"
                        created_at: 12345678
                        updated_at: 12345678
                        is_active: true
                        deactivated_at: 12345678
                    pagination_info:
                      limit: 1
                      offset: 0
                      total_items: 1
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
              examples:
                example-400:
                  summary: Invalid request parameters
                  value:
                    error: "Invalid request parameters"
                    details:
                      - "Limit must be a positive integer"
                      - "Offset must be a non-negative integer"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
              examples:
                example-401:
                  summary: Unauthorized access
                  value:
                    error: "Unauthorized"
        "403":
          description: Permission denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
              examples:
                example-403:
                  summary: Permission denied
                  value:
                    error: "Permission denied"
        "404":
          description: No businesses found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
              examples:
                example-404:
                  summary: No businesses found
                  value:
                    error: "No businesses found"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
              examples:
                example-500:
                  summary: Internal server error
                  value:
                    messages:
                      - "getBusinesses controller not implemented yet"
                      - "getBusinesses services not implemented yet"
                      - "getBusinesses database not implemented yet"
                    locations:
                      - "businesses.controller.js"
                      - "businesses.services.js"
                      - "businesses.database.js"

  /business/{id}:
    put:
      summary: Update a business
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string }
                image: { type: string }
                phone: { type: string }
                address: { type: string }
                web_address: { type: string }
                description: { type: string }
                main_owner_name: { type: string }
                main_owner_email: { type: string, format: email }
                main_owner_phone: { type: string }
              required:
                [
                  title,
                  image,
                  phone,
                  address,
                  web_address,
                  main_owner_name,
                  main_owner_email,
                  main_owner_phone,
                ]
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  updated_id: { type: string }
        "400":
          description: Invalid data
        "500":
          description: Internal Server Error

  /business/{business_id}/location_id:
    get:
      summary: Get business location details (tester:@claire-graham)
      parameters:
        - name: business_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  show_map: { type: string }
        "500":
          description: Internal Server Error

  /business/{business_id}/sellers/:
    post:
      summary: Add a seller to a business (tester:@Jany-M)
      parameters:
        - name: business_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                profile_photo: { type: string }
                address: { type: string }
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_seller_id: { type: string }
        "400":
          description: Invalid Data
        "500":
          description: Internal Server Error

  /business/{business_id}/{seller_id}/sellers:
   post:
     tags: 
          [accounts]
      summary: Create an account for a seller with QR code (tester:@Jany-M) (author:@claire-graham)
      parameters:
        - name: business_id
          in: path
          required: true
          schema:
            type: string
        - name: seller_id
          in: path
          required: true
          schema:
            type: string
     requestBody:
        description: The data needed to create a seller account.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                businessId:
                  type: string
                qrCodeUrl:
                  type: string
              required:
                - name
                - email
                - businessId
     responses:
        "201":
          description: Account created with QR code
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_seller_id: { type: string }
                example: "new-seller-12345"
              qrCodeUrl:
              type: string
                example:"https://example.com/qrcodes/seller12345.png"
        "400":
          description: Invalid Data
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input data. Missing required fields."
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred while creating the seller account."
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred."

  /sellers:
    get:
      summary: Get list of sellers (author:@Jany-M) (tester:@claire-graham)
      description: As an admin, I want to view all existing sellers, so that I can easily see their data and which business they are associated with, and manage them effectively.
      parameters:
        - name: businessId
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: searchSellerName
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  sellers_list:
                    type: array
                    items:
                      type: object
        "400":
          description: No results found
        "401":
          description: Unauthorized
        "403":
          description: Permission denied
        "404":
          description: Business ID does not exist
        "500":
          description: Internal Server Error
    post:
      tags:
       [accounts]
      summary: Register a new seller {author:@claire-graham}
      description: Creates a new seller in the system and generates a unique QR code for secure access.
      requestBody:
        required: true
        content:
         application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: "John Smith"
              email:
                type: string
                example: "john.smith@opit.com"
              businessId:
                type: string
                example: "john1234"
              qrcodeURL:
                type: string
                example: "https://example.com/qrcodes/seller12345.png"
            required:
              - name
              - email
              - businessId
              - qrcodeURL
      responses:
        "201":
          description: Seller registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  qrCodeUrl:
                    type: string
        "400":
          description: Invalid request body
        "409":
          description: Seller with the provided email or business ID already exists
        "500":
          description: Internal server error during registration
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred."


  /sellers/{seller_id}/access-history:
    get:
      summary: Get access history of a seller
      parameters:
        - name: seller_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: No access history found for this seller
        "500":
          description: Internal Server Error

  /business/{business_id}/sellers/export:
    get:
      summary: Export sellers for a business
      parameters:
        - name: business_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: No sellers found for this business
        "500":
          description: Internal Server Error

  /business/{business_id}/sellers/import:
    post:
      summary: Import sellers for a business
      parameters:
        - name: business_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Success
        "400":
          description: CSV file not in correct format
        "401":
          description: Invalid entries in the CSV file
        "402":
          description: Partial import stopped at a row
        "403":
          description: Account not in database, create it before import
        "500":
          description: Internal Server Error

  /sellers/inactive-notifications:
    post:
      summary: Send notifications to inactive sellers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inactivity_period: { type: integer }
      responses:
        "200":
          description: Notifications sent to inactive sellers
        "400":
          description: Invalid inactivity period
        "500":
          description: Failed to send notifications

components:
  schemas:
    ErrorObject:
      type: object
      properties:
        status:
          type: string
          description: "error"
        errors:
          type: array
          items:
            type: string
          description: "Error messages"
          example: ["invalid", "not available"]
        locations:
          type: array
          items:
            type: string
          description: "Optional: Additional information about the location of each message"
          example: ["db.js", "service.js"]
