openapi: 3.0.0
info:
  title: Messaging API
<<<<<<< HEAD
=======
  description:
    "The Messaging and Logs API enables communication and tracks actions.
    Messaging: Admins can send, edit, and view messages with other admins, organized in threads. Each message action triggers email notifications for efficient updates.
    Logs: Records all admin actions, allowing search, filtering, and sorting by keywords or admin names for transparency and accountability."
>>>>>>> 52c406ed2d71de0c902189fe242af2905571988d
  version: 1.0.0
  description: >-
    The Messaging and Logs API enables communication and tracks actions.| Messaging: Admins can send,
    edit, and view messages with other admins, organized in threads. Each message action triggers email
    notifications for efficient updates. Logs Records all admin actions, allowing search, filtering, and
    sorting by keywords or admin names for transparency and accountability.
servers:
  -
    url: "/api/s3"
    description: local and codespaces
tags:
  -
    name: adminlogs
    description: "Logs of admins actions"
  -
    name: messages
    description: "Messages between admins"
paths:
  /messages:
    post:
      summary: "Send a message tester:@PietroLauria (author: @Iryna)"
      description: As an admin, I want to send messages to other admins in the system so that I can communicate.
      tags:
        - chat-logs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sender_id:
                  type: integer
                recipient_id:
                  type: integer
                thread:
                  type: string
                content:
                  type: string
              required:
                - sender_id
                - recipient_id
                - thread
                - content
            examples:
              validMessage:
                value:
                  id: 1
                  sender_id: 1
                  recipient_id: 2
                  thread: "thread name"
                  content: "Hello!"
                  time: "2024-11-08T19:18:53Z"
      responses:
        "200":
          description: Message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  id:
                    type: integer
                  sender_id:
                    type: integer
                  recipient_id:
                    type: integer
                  thread:
                    type: string
                  content:
                    type: string
                  time:
                    type: string
                    format: date-time
              examples:
                successfulResponse:
                  value:
                    success: true
                    id: 1
                    sender_id: 1
                    recipient_id: 2
                    thread: "thread name"
                    content: "Hello!"
                    time: "2024-11-08T19:18:53Z"
        "400":
          description: Input can't be empty
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"

  /messages/{thread}:
    parameters:
      -
        name: thread
        in: path
        required: true
        schema:
          type: string
    get:
      summary: "Get messages by thread name tester:@PietroLauria (author: @Iryna)"
      description: As an admin, I want to retrieve all messages within a specific thread so that I can view the conversation history with other admins in the system.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  messages:
                    type: array
                    items:
                      type: string
                  locations:
                    type: array
                    items:
                      type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        sender_id:
                          type: integer
                        recipient_id:
                          type: integer
                        thread:
                          type: string
                        content:
                          type: string
                        time:
                          type: string
                          format: date-time
                allOf:
                  -
                    $ref: "#/components/schemas/SuccessObject"
        "404":
          description: No message history found
        "500":
          description: Unable to load messages, please try again later

    delete:
      summary: Delete a message
      parameters:
        -
          name: thread_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Message deleted and email sent
        "404":
          description: Message not found
        "500":
          description: Email failure, try again later

    patch:
      summary: Mark message as important (tester:@Iryna)
      parameters:
        -
          name: thread_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_important:
                  type: boolean
      responses:
        "200":
          description: Message marked as important
        "404":
          description: Message not found
        "500":
          description: Error updating message, please try again later

  /admins/{id}/status:
    post:
      summary: Update admin availability status tester:@PietroLauria (tester:@Iryna)
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                availability_status:
                  type: string
      responses:
        "200":
          description: Status updated successfully
        "404":
          description: Admin not found
        "500":
          description: Error updating status, please try again later

  /messages/history/{admin_id}:
    get:
      summary: Get full message history for an admin (tester:@Iryna)
      parameters:
        -
          name: admin_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: No message history found for this admin
        "500":
          description: Unable to load message history, please try again later

  /messages/reply/{thread_id}:
    post:
      summary: Reply to a message in a thread
      parameters:
        -
          name: thread_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sender_id:
                  type: string
                content:
                  type: string
                reply_to_message_id:
                  type: string
      responses:
        "200":
          description: Reply sent successfully
        "404":
          description: Thread or message not found
        "500":
          description: Server Error

  /adminlogs:
    get:
      summary: "Retrieve admin logs Author: @PietroLauria"
      description: "Fetches admin action logs with optional filters by admin ID, keyword, date range, and sorting options."
      tags: [ adminlogs ]
      parameters:
        -
          name: admin_id
          in: query
          description: "ID of the admin to filter logs by."
          schema:
            type: integer
        -
          name: keyword
          in: query
          description: "Keyword to search for in log details."
          schema:
            type: string
        -
          name: date_range
          in: query
          schema:
            type: string
            pattern: '^\d{4}-\d{2}-\d{2}:\d{4}-\d{2}-\d{2}$'
          description: "Date range filter in the format YYYY-MM-DD:YYYY-MM-DD."
        -
          name: sort_by
          in: query
          description: "Field to sort by."
          schema:
            type: string
            enum: [ date, keyword, admin_id ]
        -
          name: order
          in: query
          description: "Order of sorting, either ascending or descending."
          schema:
            type: string
            enum: [ asc, desc ]
      responses:
        "200":
          description: "Logs retrieved successfully."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "Primary key of the log entry."
                    action_type:
                      type: string
                      description: "Type of action performed."
                    admin_id:
                      type: number
                      description: "ID of the admin who performed the action."
                    message_id:
                      type: number
                      description: "ID of the associated message, if applicable."
                    action_time:
                      type: string
                      format: date-time
                      description: "Timestamp of when the action occurred."
                    details:
                      type: string
                      description: "Additional information about the action."
              examples:
                array_of_logs:
                  value:
                    -
                      id: 1
                      action_type: "edit"
                      admin_id: 101
                      message_id: 201
                      action_time: "2023-11-10T10:30:00Z"
                      details: "Edited message content."
                    -
                      id: 2
                      action_type: "create"
                      admin_id: 102
                      message_id: 202
                      action_time: "2023-11-10T11:00:00Z"
                      details: "Created new message."
        "400":
          description: "Invalid query parameters."
        "404":
          description: "No logs found for the specified criteria."
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"

    post:
      summary: "Log an admin action Author: @PietroLauria"
      description: "Creates a log entry for an action performed by an admin."
      tags: [ adminlogs ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - admin_id
                - action_type
              properties:
                admin_id:
                  type: number
                  description: "ID of the admin performing the action."
                action_type:
                  type: string
                  description: "Type of action performed by the admin."
                message_id:
                  type: number
                  description: "ID of the associated message, if applicable."
                action_time:
                  type: string
                  format: date-time
                  description: "Timestamp of the action."
                details:
                  type: string
                  description: "Additional details about the action."
      responses:
        "200":
          description: "Log created successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  log_id:
                    type: integer
                    description: "ID of the created log entry."
                  success:
                    type: boolean
                    description: "Indicates if the log creation was successful."
        "400":
          description: "Missing required fields: admin_id or action_type."
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
components:
  schemas:
    ErrorObject:
      type: object
      properties:
        status:
          type: string
          description: "error"
        errors:
          type: array
          items:
            type: string
          description: "Error messages"
<<<<<<< HEAD
          example: [ "invalid", "not available" ]
=======
          example: ["invalid", "not available"]
>>>>>>> 52c406ed2d71de0c902189fe242af2905571988d
        locations:
          type: array
          items:
            type: string
          description: "Optional: Additional information about the location of each message"
<<<<<<< HEAD
          example: [ "db.js", "service.js" ]
    SuccessObject:
      type: object
      properties:
        locations:
          type: array
          items:
            type: string
          description: "Optional tracking locations related to the data"
          example: [ "tracking location optional" ]
        messages:
          type: array
          items:
            type: string
          description: "Messages that provide additional information about the response"
          example: [ "tracking location optional" ]
=======
          example: ["db.js", "service.js"]
>>>>>>> 52c406ed2d71de0c902189fe242af2905571988d
